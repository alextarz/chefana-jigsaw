type Fn<T> = () => T;
type Functions<T> = Fn<T>[] | [Fn<T>[]];
type EarlyBreaker = (e: unknown) => boolean;
declare const seqEarlyBreak: <T>(earlyBreaker: EarlyBreaker | undefined, ...args: Functions<T>) => Promise<T>;
declare const seq: <T>(...fns: Functions<T>) => Promise<T>;
export { seq, seqEarlyBreak };
export type { EarlyBreaker as SeqEarlyBreaker, Functions as SeqFunctions, Fn as SeqFn, };
//# sourceMappingURL=seq.d.ts.map