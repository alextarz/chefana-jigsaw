import { wait } from "./wait.js";
const DEFAULT_MAX_BLOCK_TIME = 16;
const DEFAULT_WAIT_TIME = 1;
const mapAsync = async (context, callback, pauseEvery = DEFAULT_MAX_BLOCK_TIME, pauseTime = DEFAULT_WAIT_TIME) => {
    let lastWaitMoment = Date.now();
    const result = [];
    const l = context.length;
    for (let i = 0; i < l; i++) {
        const item = context[i];
        result.push(callback(item, i, context));
        if (Date.now() - lastWaitMoment >= pauseEvery) {
            await wait(pauseTime);
            lastWaitMoment = Date.now();
        }
    }
    return result;
};
export { mapAsync, };
//# sourceMappingURL=mapAsync.js.map