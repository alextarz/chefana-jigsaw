import type { Task } from "./Task";
declare enum EVENTS {
    TASK_ADD = "task-add",
    TASK_REMOVE = "task-remove",
    TASK_START = "task-start",
    TASK_END = "task-end",
    TASK_SUCCESS = "task-success",
    TASK_ERROR = "task-error",
    TASK_THROWN = "task-thrown",
    QUEUE_SIZE = "queue-size",
    QUEUE_ORDER = "queue-order"
}
declare type EventsTypes = {
    [EVENTS.TASK_ADD]: (task: Task<unknown>) => void;
    [EVENTS.TASK_REMOVE]: (task: Task<unknown>) => void;
    [EVENTS.TASK_START]: (task: Task<unknown>) => void;
    [EVENTS.TASK_END]: (task: Task<unknown>, result: unknown) => void;
    [EVENTS.TASK_SUCCESS]: (task: Task<unknown>, result: unknown) => void;
    [EVENTS.TASK_ERROR]: (task: Task<unknown>, error: Error) => void;
    [EVENTS.TASK_THROWN]: (task: Task<unknown>, error: Error) => void;
    [EVENTS.QUEUE_SIZE]: (size: number) => void;
    [EVENTS.QUEUE_ORDER]: (order: Task<unknown>[]) => void;
};
export { EVENTS };
export type { EventsTypes };
//# sourceMappingURL=const.d.ts.map